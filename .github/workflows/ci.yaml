name: CI of RobotArrayVisualization

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  # schedule:
  #   - cron: '0 0 * * 0'

env:
  ROS_DISTRO: humble

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        build-type: [RelWithDebInfo, Debug]
        mc-rtc-version: [head, stable]
        compiler: [gcc]
        test-name: [TestSingleRobotStateArrayDisplay]
        exclude:
          - build-type: Debug
            mc-rtc-version: stable
        include:
          - os: ubuntu-22.04
            build-type: RelWithDebInfo
            mc-rtc-version: head
            compiler: gcc
            test-name: TestMultiRobotStateArrayDisplay
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup environment variables
        run: |
          set -e
          set -x
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ] && \
             [ "${{ matrix.build-type }}" == "RelWithDebInfo" ] && \
             [ "${{ matrix.mc-rtc-version }}" == "head" ] && \
             [ "${{ matrix.compiler }}" == "gcc" ]
          then
            echo "RUN_RECORDING_STEPS=true" >> $GITHUB_ENV
          else
            echo "RUN_RECORDING_STEPS=false" >> $GITHUB_ENV
          fi
          echo "DISPLAY=:1" >> $GITHUB_ENV
      - name: Install dependencies
        uses: jrl-umi3218/github-actions/install-dependencies@master
        with:
          ubuntu: |
            apt-mirrors:
              mc-rtc:
                cloudsmith: mc-rtc/${{ matrix.mc-rtc-version }}
            apt: librbdyn-dev doxygen graphviz
      - name: Setup ROS2 Humble
        run: |
          set -e 
          set -x
          sudo apt install curl -y
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo apt upgrade
          sudo apt install ros-humble-ros-base
          sudo apt-get install -y python3-colcon-common-extensions python3-rosdep
          echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
        shell: bash
      - name: Setup display
        run: |
          set -e
          set -x
          sudo apt-get install -y -qq xvfb ffmpeg mesa-utils fluxbox xserver-xorg xserver-xorg-core xserver-xorg-video-all libwayland-egl1-mesa
          Xvfb ${{ env.DISPLAY }} -screen 0 1920x1080x24 &
          sleep 10s
          fluxbox 2> /dev/null &
      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup workspace
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/colcon_ws/src
          cd ${GITHUB_WORKSPACE}/colcon_ws
        shell: bash
      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: colcon_ws/src/${{ github.repository }}
      - name: Download dependent repository codes
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/colcon_ws
          if [ -f src/${{ github.repository }}/depends.rosinstall ]
          then
            wstool init src
            wstool merge -t src src/${{ github.repository }}/depends.rosinstall -y
            wstool update -t src
          fi
        shell: bash
      - name: Rosdep install
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/colcon_ws
          if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]
          then
            sudo rosdep init
          fi
          rosdep update
          rosdep install -y -r --from-paths src --ignore-src
        shell: bash
      - name: Colcon build
        run: |
          set -e
          set -x
          source /opt/ros/humble/setup.bash
          cd ${GITHUB_WORKSPACE}/colcon_ws
          COLCON_OPTIONS="--merge-install"
          colcon build ${COLCON_OPTIONS} --packages-select robot_array_msgs --cmake-args -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
        shell: bash